readerConfig:
  filereader:
    readerClass: com.cognitree.examples.tasks.scheduler.readers.FileTaskDefinitionReader
    config:
      source: /Users/ankitnanglia/workspace/cognitree/scheduler/examples/src/main/resources/task-definitions.yaml
    schedule: 0 0/1 * 1/1 * ? *

timeoutPolicyConfig:
  notifyOnTimeout:
    policyClass: com.cognitree.examples.tasks.scheduler.policies.NotifyOnTimeoutPolicy
    config:
      smtp.host: "smtp.gmail.com"
      smtp.port: 587
      sender.name:
      sender.email:
      sender.password:
      email.subject: "Task Timeout Notification"
      recipient.name:
      recipient.email:

handlerConfig:
  default:
    handlerClass: com.cognitree.examples.tasks.executor.handlers.ConsoleLogger
    maxExecutionTime: 10m
    maxParallelTasks: 16
  shell:
    handlerClass: com.cognitree.tasks.executor.handlers.ShellCommandHandler
    maxExecutionTime: 10m
    timeoutPolicy: notifyOnTimeout
    maxParallelTasks: 4
  typeA:
    handlerClass: com.cognitree.examples.tasks.executor.handlers.FileLogger
    maxExecutionTime: 10m
    timeoutPolicy: notifyOnTimeout
    maxParallelTasks: 4

taskProducerConfig:
  producerClass: com.cognitree.tasks.queue.producer.InMemoryTaskProducer
taskConsumerConfig:
  consumerClass: com.cognitree.tasks.queue.consumer.InMemoryTaskConsumer
  config:
    pollInterval: 10s # time interval to poll tasks from task queue for execution

taskStatusProducerConfig:
  producerClass: com.cognitree.tasks.queue.producer.InMemoryStatusProducer
taskStatusConsumerConfig:
  consumerClass: com.cognitree.tasks.queue.consumer.InMemoryStatusConsumer
  config:
    pollInterval: 10s # time interval to poll tasks status from status queue

# Periodically, tasks older than the specified interval and
# status as one of the final state are purged from memory to prevent the system from going OOM.
# check ApplicationConfig.taskPurgeInterval for more details
taskPurgeInterval: 1d